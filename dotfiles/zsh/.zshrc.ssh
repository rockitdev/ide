#!/usr/bin/env zsh
# SSH Agent Configuration
# This file handles SSH agent initialization and key management

# ============================================================================
# SSH AGENT MANAGEMENT
# ============================================================================

# Function to start SSH agent if needed
start_ssh_agent() {
    # Check if ssh-agent is already running
    if ! pgrep -x "ssh-agent" > /dev/null; then
        echo "Starting SSH agent..."
        eval "$(ssh-agent -s)"
        echo "SSH agent started with PID $SSH_AGENT_PID"
    fi
}

# Function to add SSH keys
add_ssh_keys() {
    # List of SSH keys to add
    local ssh_keys=(
        "$HOME/.ssh/VERB"
        "$HOME/.ssh/VERB-ed2"
        "$HOME/.ssh/VERBPCI"
        "$HOME/.ssh/id_rsa"
        "$HOME/.ssh/id_ed25519"
    )
    
    # Check if keys are already added
    if ! ssh-add -l >/dev/null 2>&1; then
        echo "Adding SSH keys..."
        for key in "${ssh_keys[@]}"; do
            if [ -f "$key" ]; then
                ssh-add "$key" 2>/dev/null && echo "Added: $key"
            fi
        done
    else
        echo "SSH keys already loaded"
    fi
}

# Initialize SSH agent on shell startup (silent)
start_ssh_agent >/dev/null 2>&1
add_ssh_keys >/dev/null 2>&1

# ============================================================================
# SSH HELPERS
# ============================================================================

# List loaded SSH keys
alias ssh-list='ssh-add -l'

# Add all SSH keys
alias ssh-add-all='add_ssh_keys'

# Remove all SSH keys
alias ssh-remove-all='ssh-add -D'

# SSH agent status
alias ssh-status='ssh-add -l && echo "Agent PID: $SSH_AGENT_PID"'

# Quick SSH to common hosts (customize these)
# alias ssh-prod='ssh user@production.server.com'
# alias ssh-dev='ssh user@dev.server.com'

# SSH with specific key
ssh-with-key() {
    local key="$1"
    shift
    ssh -i "$HOME/.ssh/$key" "$@"
}

# Copy SSH public key to clipboard
ssh-copy-key() {
    local key="${1:-id_rsa}"
    local pub_file="$HOME/.ssh/${key}.pub"
    
    if [ -f "$pub_file" ]; then
        if command -v pbcopy &> /dev/null; then
            cat "$pub_file" | pbcopy
            echo "Public key copied to clipboard: $pub_file"
        else
            cat "$pub_file"
        fi
    else
        echo "Public key not found: $pub_file"
    fi
}

# Generate new SSH key
ssh-gen() {
    local email="${1:-user@example.com}"
    local keyname="${2:-id_ed25519}"
    
    ssh-keygen -t ed25519 -C "$email" -f "$HOME/.ssh/$keyname"
    echo "New SSH key generated: $HOME/.ssh/$keyname"
}

# Test SSH connection
ssh-test() {
    local host="${1:-github.com}"
    ssh -T "git@$host"
}